name: CI/CD Pipeline

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Go dependencies
      run: go mod download
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Build Go server
      run: go build -o chatserver server.go
    
    - name: Test Go server
      run: |
        ./chatserver -port 8090 &
        SERVER_PID=$!
        sleep 3
        curl -f http://localhost:8090/health || exit 1
        kill $SERVER_PID
    
    - name: Test HTTPS server
      run: |
        ./chatserver -port 8443 -secure &
        SERVER_PID=$!
        sleep 3
        curl -k -f https://localhost:8443/health || exit 1
        kill $SERVER_PID

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        # Build frontend first
        cd frontend
        npm ci
        npm run build
        cd ..
        
        # Build Docker image
        docker build -t chat-server:latest .
    
    - name: Test Docker container
      run: |
        # Test HTTP container
        docker run -d --name chat-http -p 8090:8090 chat-server:latest
        sleep 5
        curl -f http://localhost:8090/health || exit 1
        docker stop chat-http
        docker rm chat-http
        
        # Test HTTPS container
        docker run -d --name chat-https -p 8443:8443 chat-server:latest ./chatserver -port 8443 -secure
        sleep 5
        curl -k -f https://localhost:8443/health || exit 1
        docker stop chat-https
        docker rm chat-https

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
